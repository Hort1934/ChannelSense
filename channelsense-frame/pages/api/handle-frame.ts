import { FrameRequest, FrameResponse } from "frames.js";

export async function POST(req: Request): Promise<Response> {
  const body = (await req.json()) as FrameRequest;

  const buttonIndex = body.untrustedData.buttonIndex;

  let responseText = "üëã –í—ñ—Ç–∞—î–º–æ –≤ ChannelSense!";

  if (buttonIndex === 1) {
    // –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞
    responseText = `üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞:
–ù–∞ —Ü—å–æ–º—É —Ç–∏–∂–Ω—ñ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∑–Ω–∏–∑–∏–ª–∞—Å—å –Ω–∞ 30%.
–¢–æ–ø-—Ç–µ–º–∞: –ø–æ—à—É–∫ cofounder-—ñ–≤.`;
  } else if (buttonIndex === 2) {
    // –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è
    responseText = `üõ†Ô∏è –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è:
–í–∏ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ —É—á–∞—Å–Ω–∏–∫—ñ–≤, –ø—ñ–Ω–∏—Ç–∏ –∫–∞—Å—Ç–∏ –∞–±–æ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è.
(–ö–æ–º–∞–Ω–¥–∏ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–ª–µ)`;
  } else if (buttonIndex === 3) {
    // –ó–≤—ñ—Ç
    responseText = `üìã –ó–≤—ñ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ:
–°—å–æ–≥–æ–¥–Ω—ñ –≤ /founders:
‚Ä¢ 5 –Ω–æ–≤–∏—Ö —ñ–¥–µ–π
‚Ä¢ 2 –∑–∞–ø–∏—Ç–∏ –Ω–∞ —Å–ø—ñ–≤–∑–∞—Å–Ω–æ–≤–Ω–∏–∫—ñ–≤`;
  }

  const frameRes: FrameResponse = {
    image: `${process.env.NEXT_PUBLIC_HOST}/static/card.png`, // –∞–±–æ –∫–∞—Å—Ç–æ–º–Ω–∏–π
    postUrl: `${process.env.NEXT_PUBLIC_HOST}/api/frame`,
    textInput: "–ü–æ—Å—Ç–∞–≤ —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è",
    buttons: ["–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞", "–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è", "–ó–≤—ñ—Ç"],
    imageAspectRatio: "1.91:1",
    ogImage: `${process.env.NEXT_PUBLIC_HOST}/static/card.png`,
    metadata: {
      message: responseText,
    },
  };

  return new Response(JSON.stringify(frameRes), {
    headers: { "Content-Type": "application/json" },
  });
}
